{
  "name": "zentachain_frontend-configs",
  "version": "1.0.0",
  "private": false,
  "license": "MIT",
  "engines": {
    "node": "18",
    "npm": "8"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^5.59.0",
    "@typescript-eslint/parser": "^5.59.0",
    "eslint": "^8.37.0",
    "eslint-plugin-jsonc": "^2.7.0",
    "husky": "^8.0.3",
    "lint-staged": "^13.2.0",
    "prettier": "2.8.7",
    "svgo": "^3.0.2",
    "typescript": "^5.0.3"
  },
  "scripts": {
    "prepare": "husky install",
    "format-svg": "npx svgo -r ./configs",
    "validate:featured-networks": "node ./tools/featured-networks-config-validator/index.js",
    "validate:footer-links": "node ./tools/footer-links-config-validator/index.js",
    "validate:marketplace": "node ./tools/marketplace-config-validator/index.js"
  },
  "lint-staged": {
    "*.{js,ts}": "eslint --cache --fix",
    "*.{js,ts,json,yaml}": "prettier --write"
  },
  "dependencies": {
    "yup": "^1.3.1"
  },
  "description": "1. Checkout to `dev` branch - `git checkout dev` 2. Pull the latest changes in the repo - `git pull` 3. Create your branch - `git checkout -b <your-branch-name>` 4. Make necessary changes in config files and schemas 5. Commit your changes - `git commit -m '<your-commit-message>'` 6. Push changes to the repo -  `git push --set-upstream origin <your-branch-name>` 7. Create Pull Request in the Github UI from `<your-branch-name>` to `dev` branch 8. Wait until all checks are passed; make fixes if needed 9. Merge Pull Request to `dev` branch 10. Go to corresponding development stand and validate that your updates are applied correctly 11. Create Pull Request in the Github UI from `dev` to `main` branch 12. Merge Pull Request and check updates on production stand",
  "main": ".eslintrc.js",
  "author": ""
}
